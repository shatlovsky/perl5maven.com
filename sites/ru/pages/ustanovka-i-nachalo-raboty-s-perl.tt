=title Установка и начало работы с Perl
=timestamp 2013-04-05T23:38:00
=indexes strict, warnings, say, print, chomp, scalar, $
=status show
=original installing-perl-and-getting-started
=books beginner_book
=author szabgab
=translator shatlovsky
=archive 1
=comments 1
=social 1

=abstract start

Это первая часть <a href="/perl-tutorial">учебника по Perl</a>.

В ней вы узнаете, как установить Perl на Microsoft Windows и как начать
использовать его на Windows, Linux или Mac.

Вы узнаете, как установить и настроить среду разработки, или, говоря простым языком:
какой редактор или IDE использовать для Perl-программирования?

Также мы увидим стандартный пример "Hello World".

=abstract end

<h2>Windows</h2>

В Windows мы будем использовать <a href="http://dwimperl.com/">DWIM Perl</a>. Это пакет программ,
содержащий компилятор/интерпретатор <a href="http://padre.perlide.org/">Padre, Perl IDE</a>,
и ряд модулей из CPAN.

Для начала зайдите на сайт <a href="http://dwimperl.com/">DWIM Perl</a>
и откройте страницу загрузки <b>DWIM Perl для Windows</b>.

Скачайте исполняемый файл и установите его в вашу систему. Предварительно
пожалуйста убедитесь, что у вас не установлена любая другая версия Perl.

Конечно, разные версии Perl можно заставить работать вместе, но как это сделать потребует дополнительных разъяснений.
Поэтому пусть пока у вас в системе будет установлена одна единственная версия Perl.

<h2>Linux</h2>

Большинство современных Linux-дистрибутивов поставляются со свежей версией Perl.
Её мы и будем использовать. В качестве редактора
вы можете установить Padre - большинство дистрибутивов дают возможность сделать это
с помощью стандартного менеджера пакетов. Или вы можете выбрать любой другой текстовый редактор.
Если вы дружите с Vim или Emacs, используйте его. Если нет,
попробуйте Gedit - простой и удобный.

<h2>Apple</h2>

Уверен, Маки также поставляются с предустановленным Perl, ну или вы можете легко установить его с помощью
стандартных средств установки.

<h2>Редактор и IDE</h2>

Хотя я это и советую, вовсе не обязательно использовать Padre IDE, чтобы писать код на Perl.
В следующей части учебника я перечислю пару <a href="/redaktor-dlya-perl">редакторов и IDE</a>, которые вы
можете использовать для программирования на Perl. Но даже если вы выберете другой редактор,
я бы рекомендовал - для пользователей Windows - установить упомянутый выше пакет DWIM Perl.

Он идет с большим количеством готовых Perl-модулей, это сэкономит вам массу времени и сил.

<h2>Видео</h2>

Вы можете посмотреть видео
<a href="http://www.youtube.com/watch?v=c3qzmJsR2H0">Hello world with Perl</a> (англ.),
которое я загрузил на YouTube. Также обратите внимание на
<a href="http://perlmaven/beginner-perl-maven-video-course">Beginner Perl Maven video course</a> (англ.).

<h2>Первая программа</h2>

Ваша первая программа будет выглядеть, например, так:

<code lang="perl">
use 5.010;
use strict;
use warnings;

say "Hello World";
</code>

Рассмотрим её шаг за шагом.

<h2>Hello world</h2>

Как только вы установили DWIM Perl, вы можете нажать на
"Пуск -> Все программы -> DWIM Perl -> Padre", откроется редактор
с пустым новым файлом.

Введите:

<code lang="perl">
print "Hello World\n";
</code>

Как вы, наверное, заметили, команды в Perl заканчиваются точкой с запятой <hl>;</hl>.
Знак <hl>\n</hl> используется для обозначения перевода строки.
Строки заключены в двойные кавычки <hl>"</hl>.
Функция <hl>print</hl> печатает текст на экран.
В результате выполнения этого кода Perl выведет на экран текст, заканчивающийся переводом строки.

Сохраните файл как hello.pl, чтобы затем вы запустить его командой "Run -> Run Script".
Появится новое окно с результатами работы программы.

Готово, вы писали ваш первый Perl-скрипт.

Теперь давайте его немного усовершенствуем.

<h2>Perl в командной строке для тех, кто не пользуется Padre</h2>

Если вы не используете Padre или другую <a href="/redaktor-dlya-perl">IDE</a>,
вы не сможете запустить скрипт прямо из редактора.
По крайней мере, по умолчанию. Нужно будет открыть shell
(или cmd в Windows), перейти в каталог, где вы сохранили hello.pl
и набрать команду:

<hl>perl hello.pl</hl>

Так Perl-скрипты запускаются из командной строки.

<h2>say() вместо print()</h2>

Давайте немного улучшим наш однострочный Perl-скрипт:

Для начала нужно указать минимальную версию Perl, которую мы хотели бы использовать:

<code lang="perl">
use 5.010;
print "Hello World\n";
</code>

Теперь можете запустить скрипт еще раз, выбрав в меню
"Run -> Run Script", или нажав клавишу <b>F5</b>.
Перед запуском файл будет автоматически сохранен.

В целом, указание минимальной требуемой версии Perl является хорошей практикой.

В нашем случае это добавляет в Perl также несколько новых функций, в том числе оператор <hl>say()</hl>.
<hl>say</hl> похож на <hl>print</hl>, но короче, и
автоматически добавляет в конце символ перевода строки.

Вы можете переписать ваш код так:

<code lang="perl">
use 5.010;
say "Hello World";
</code>

Мы заменили <hl>print</hl> на <hl>say</hl> и убрали <hl>\n</hl> с конца строки.

Сейчас вы скорее всего используете Perl версии 5.12.3 или 5.14.
Большинство современных Linux-дистрибутивов версии поставляются с Perl 5.10 или более поздней версии.

К сожалению, кое-где ещё работают старые версии Perl.
В них нет оператора <hl>say()</hl>, и, кроме того, могут потребоваться некоторые другие изменения
в примерах, которые мы рассмотрим позднее. В дальнейшем я буду отмечать, если используются возможности
версии 5.10.

<h2>"Ремни безопасности"</h2>

Помимо прочего, в каждой скрипт я настоятельно рекомендую добавлять несколько команд, меняющих
поведение Perl. Это две строки, так называемые прагмы, которые действуют подобно флагам компилятора
в других языках:

<code lang="perl">
use 5.010;
use strict;
use warnings;

say "Hello World";
</code>

Команда <hl>use</hl> говорит Perl, что нужно загрузить и использовать каждую прагму.

<hl>strict</hl> и <hl>warnings</hl> помогут вам отловить некоторые общие ошибки
в коде, а иногда даже просто не дадут вам их сделать.
Это очень удобно.

<h2>Чтение ввода</h2>

Теперь давайте ещё улучшим нашу программу: будем спрашивать у пользовательницы её имя, а затем
выводить его на экран.

<code lang="perl">
use 5.010;
use strict;
use warnings;

say "What is your name? ";
my $name = <STDIN>;
say "Hello $name, how are you?";
</code>

<hl>$name</hl> называется скалярной переменной, или просто: скаляр.

Переменные объявляются при помощи ключевого слова <b>my</b>.
(По секрету заметим, что на самом деле это одно из требований, добавленных прагмой <hl>strict</hl>).

Скалярные переменные всегда начинаются со знака доллара: <hl>$</hl>.
&lt;STDIN&gt; это инструмент для чтения строки с клавиатуры.

Введите наш новый код и запустите его, нажав клавишу F5.

Он спросит имя. Введите его и нажмите ENTER, чтобы сообщить Perl
об окончании ввода.

Обратите внимание, что вывод нашей программы слегка кривой: запятая после
имени появляется на новой строке. Это произошло потому, что ENTER, который вы нажали после ввода имени,
попал в переменную <hl>$name</hl>.

<h2>Избавляемся от переводов строк</h2>

<code lang="perl">
use 5.010;
use strict;
use warnings;

say "What is your name? ";
my $name = <STDIN>;
chomp $name;
say "Hello $name, how are you?";
</code>

Это настолько распространенная в Perl задача, что есть специальная функция <hl>chomp</hl>,
которая удаляет концевой перенос строки.

<h2>Заключение</h2>

В начало каждого скрипта, который вы пишете, <b>всегда</b> добавляйте <hl>use strict;</hl> и <hl>use warnings;</hl>.
Также крайне рекомендуется добавлять <hl>use 5.010;</hl>.

<h2>Задания</h2>

Я обещал задания.

Попробуйте запустить следующий скрипт:

<code lang="perl">
use strict;
use warnings;
use 5.010;

say "Hello ";
say "World";
</code>

Он не выводит сообщение в одну строку. Почему? Как это исправить?

<h2>Задание №2</h2>

Напишите скрипт, который запрашивает у пользовательницы два числа, одно за другим.
Затем выводит сумму этих двух чисел.

<h2>Что дальше</h2>

Следующая часть нашего учебника расскажет про
<a href="/redaktor-dlya-perl">редакторы, IDE и среду разработки для Perl</a>.
